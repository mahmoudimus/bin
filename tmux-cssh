#!/bin/bash
# tmux-cssh - TMUX-C(luster)-SSH
#
# Description
#
# tmux is a terminal multiplexer, like e.g. screen, which gives you a
# possibility to use multiple virtual terminal session within one real
# terminal session. tmux-cssh (tmux-cluster-ssh) sets a comfortable
# and easy to use functionality, clustering and synchronizing virtual
# tmux-sessions, on top of tmux. No need for a x-server or
# x-forwarding. tmux-cssh works just with tmux and in an low-level
# terminal-environment, like most server do.
#
# Dependencies / Installation
#
# $ apt-cache search --names-only tmux
# tmux - Terminal-Multiplexer
#
# ... under debian-based systems:
#
# $ sudo apt-get install tmux
#
# Usage / Example
# First, take a look at the help- and syntax-texts:
#
# $ tmux-cssh --help
#
# You can connect to a single server, with a single connection-data:
#
# $ tmux-cssh -sc my-user-name@my-own-server
#
# You can connect multiple server, with different connection-data:
#
# $ tmux-cssh -sc my-user-name@my-own-server -sc second_user@second_server
#
# You can connect to multiple server, with a single connection-data:
#
# $ tmux-cssh -u my-user-name -sc my-own-server -sc second_server
#
# You can connect to multiple server, the short way:
#
# $ tmux-cssh -u my-user-name my_server 1.2.3.4 11.22.33.44 my_second_server my_third_server my_and_so_on_server

THIS_BASENAME=`basename $0`
TMUX_SESSION_NAME=$THIS_BASENAME
HOSTS=""
USER=""
CERTIFICATE=""

syntax() {
    echo "Syntax: ${THIS_BASENAME} [-h|-u [user]|-c [path to certificate]|-sc [ssh-server-connect-string]|-ts [session-name]|-q]"
    echo

    echo "* Author: Dennis Hafemann"
    echo "* For a maybe newer version of ${THIS_BASENAME} take a look on https://github.com/dennishafemann/tmux-cssh"
    echo

    echo "-h | --help                                This help."
    echo

    echo "-u | --user                                User to use."
    echo

    echo "-c | --certificate                         Path to ssh-certificate to use."
    echo

    echo "-sc | --ssh-server-connect-string          SSH-connection-string, multiple."
    echo

    echo "-ts | --tmux-session-name                  Alternative tmux-session-name, default: ${THIS_BASENAME}"
    echo

    echo "-ns | --new-session                        Initializes a new session, like -ts [name]."
    echo

    echo "-q | --quiet                               Quiet-mode."
    echo

    echo "* Other arguments will be interpreted as '-sc'."
    echo
}

while [ $# -gt 0 ]; do
    case "$1" in
        -h|--help) syntax; exit;;
        -u|--user) USER="$2"; shift;;
        -c|--certificate) CERTIFICATE="$2"; shift;;
        -sc|--ssh-server-connect-string) HOSTS="${HOSTS} $2"; shift;;
        -ts|--tmux-session-name) TMUX_SESSION_NAME="$2"; shift;;
        -ns|--new-session) TMUX_SESSION_NAME="${TMUX_SESSION_NAME}_`date +%s`";;
        -q|-quiet) QUIET="true";;
        *) HOSTS="${HOSTS} $1";;
    esac

    shift
done

# Check if tmux-session is available
if [ `tmux ls 2> /dev/null | grep ${TMUX_SESSION_NAME} | wc -l` -gt 0 ]; then
    tmux attach -t ${TMUX_SESSION_NAME}
    exit
fi


# Hosts available ?
if [ "${HOSTS}" == "" ]; then
    echo "* Hosts not given."
    echo

    syntax

    exit
fi

initTmuxCall="true"

# Walk through hosts
for host in `echo ${HOSTS}`; do
    connectString="${host}"

    # Add user-part
    if [ "${USER}" != "" ]; then
        connectString="${USER}@${connectString}"
    fi

    # Add certificate-part
    if [ "${CERTIFICATE}" != "" ]; then
        connectString="-i ${CERTIFICATE} ${connectString}"
    fi

    # Finalize connect-string
    connectString="ssh ${connectString}"

    # Output
    if [ "${QUIET}" != "true" ]; then
        echo ${connectString}
    fi

    # First Call, inits the tmux-session
    if [ "${initTmuxCall}" == "true" ]; then
        tmux new-session -d -s ${TMUX_SESSION_NAME} "${connectString}"

        initTmuxCall="false"
    # Attach zu tmux-session
    else
        tmux split-window -t ${TMUX_SESSION_NAME} "${connectString}"
        tmux select-layout -t ${TMUX_SESSION_NAME} tiled
    fi

done

# Set pane synchronisation
tmux set-window-option -t ${TMUX_SESSION_NAME} synchronize-panes on

# Attach to tmux session
tmux attach-session -t ${TMUX_SESSION_NAME}
